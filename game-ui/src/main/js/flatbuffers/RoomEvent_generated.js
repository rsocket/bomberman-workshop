// automatically generated by the FlatBuffers compiler, do not modify

/**
 * @const
 * @namespace
 */
var xyz = xyz || {};

/**
 * @const
 * @namespace
 */
xyz.bomberman = xyz.bomberman || {};

/**
 * @const
 * @namespace
 */
xyz.bomberman.room = xyz.bomberman.room || {};

/**
 * @const
 * @namespace
 */
xyz.bomberman.room.data = xyz.bomberman.room.data || {};

/**
 * @enum {number}
 */
xyz.bomberman.room.data.EventType = {
  Added: 0,
  Updated: 1,
  Removed: 2
};

/**
 * @enum {string}
 */
xyz.bomberman.room.data.EventTypeName = {
  '0': 'Added',
  '1': 'Updated',
  '2': 'Removed'
};

/**
 * @constructor
 */
xyz.bomberman.room.data.Player = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {xyz.bomberman.room.data.Player}
 */
xyz.bomberman.room.data.Player.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {xyz.bomberman.room.data.Player=} obj
 * @returns {xyz.bomberman.room.data.Player}
 */
xyz.bomberman.room.data.Player.getRootAsPlayer = function(bb, obj) {
  return (obj || new xyz.bomberman.room.data.Player).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {xyz.bomberman.room.data.Player=} obj
 * @returns {xyz.bomberman.room.data.Player}
 */
xyz.bomberman.room.data.Player.getSizePrefixedRootAsPlayer = function(bb, obj) {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new xyz.bomberman.room.data.Player).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array|null}
 */
xyz.bomberman.room.data.Player.prototype.id = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array|null}
 */
xyz.bomberman.room.data.Player.prototype.name = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param {flatbuffers.Builder} builder
 */
xyz.bomberman.room.data.Player.startPlayer = function(builder) {
  builder.startObject(2);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} idOffset
 */
xyz.bomberman.room.data.Player.addId = function(builder, idOffset) {
  builder.addFieldOffset(0, idOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} nameOffset
 */
xyz.bomberman.room.data.Player.addName = function(builder, nameOffset) {
  builder.addFieldOffset(1, nameOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
xyz.bomberman.room.data.Player.endPlayer = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} idOffset
 * @param {flatbuffers.Offset} nameOffset
 * @returns {flatbuffers.Offset}
 */
xyz.bomberman.room.data.Player.createPlayer = function(builder, idOffset, nameOffset) {
  xyz.bomberman.room.data.Player.startPlayer(builder);
  xyz.bomberman.room.data.Player.addId(builder, idOffset);
  xyz.bomberman.room.data.Player.addName(builder, nameOffset);
  return xyz.bomberman.room.data.Player.endPlayer(builder);
}

/**
 * @constructor
 */
xyz.bomberman.room.data.RoomEvent = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {xyz.bomberman.room.data.RoomEvent}
 */
xyz.bomberman.room.data.RoomEvent.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {xyz.bomberman.room.data.RoomEvent=} obj
 * @returns {xyz.bomberman.room.data.RoomEvent}
 */
xyz.bomberman.room.data.RoomEvent.getRootAsRoomEvent = function(bb, obj) {
  return (obj || new xyz.bomberman.room.data.RoomEvent).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {xyz.bomberman.room.data.RoomEvent=} obj
 * @returns {xyz.bomberman.room.data.RoomEvent}
 */
xyz.bomberman.room.data.RoomEvent.getSizePrefixedRootAsRoomEvent = function(bb, obj) {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new xyz.bomberman.room.data.RoomEvent).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns {xyz.bomberman.room.data.EventType}
 */
xyz.bomberman.room.data.RoomEvent.prototype.type = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? /** @type {xyz.bomberman.room.data.EventType} */ (this.bb.readInt8(this.bb_pos + offset)) : xyz.bomberman.room.data.EventType.Added;
};

/**
 * @param {xyz.bomberman.room.data.EventType} value
 * @returns {boolean}
 */
xyz.bomberman.room.data.RoomEvent.prototype.mutate_type = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 4);

  if (offset === 0) {
    return false;
  }

  this.bb.writeInt8(this.bb_pos + offset, value);
  return true;
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array|null}
 */
xyz.bomberman.room.data.RoomEvent.prototype.id = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param {number} index
 * @param {xyz.bomberman.room.data.Player=} obj
 * @returns {xyz.bomberman.room.data.Player}
 */
xyz.bomberman.room.data.RoomEvent.prototype.players = function(index, obj) {
  var offset = this.bb.__offset(this.bb_pos, 8);
  return offset ? (obj || new xyz.bomberman.room.data.Player).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos + offset) + index * 4), this.bb) : null;
};

/**
 * @returns {number}
 */
xyz.bomberman.room.data.RoomEvent.prototype.playersLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 8);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @param {flatbuffers.Builder} builder
 */
xyz.bomberman.room.data.RoomEvent.startRoomEvent = function(builder) {
  builder.startObject(3);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {xyz.bomberman.room.data.EventType} type
 */
xyz.bomberman.room.data.RoomEvent.addType = function(builder, type) {
  builder.addFieldInt8(0, type, xyz.bomberman.room.data.EventType.Added);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} idOffset
 */
xyz.bomberman.room.data.RoomEvent.addId = function(builder, idOffset) {
  builder.addFieldOffset(1, idOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} playersOffset
 */
xyz.bomberman.room.data.RoomEvent.addPlayers = function(builder, playersOffset) {
  builder.addFieldOffset(2, playersOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<flatbuffers.Offset>} data
 * @returns {flatbuffers.Offset}
 */
xyz.bomberman.room.data.RoomEvent.createPlayersVector = function(builder, data) {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
xyz.bomberman.room.data.RoomEvent.startPlayersVector = function(builder, numElems) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
xyz.bomberman.room.data.RoomEvent.endRoomEvent = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} offset
 */
xyz.bomberman.room.data.RoomEvent.finishRoomEventBuffer = function(builder, offset) {
  builder.finish(offset);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} offset
 */
xyz.bomberman.room.data.RoomEvent.finishSizePrefixedRoomEventBuffer = function(builder, offset) {
  builder.finish(offset, undefined, true);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {xyz.bomberman.room.data.EventType} type
 * @param {flatbuffers.Offset} idOffset
 * @param {flatbuffers.Offset} playersOffset
 * @returns {flatbuffers.Offset}
 */
xyz.bomberman.room.data.RoomEvent.createRoomEvent = function(builder, type, idOffset, playersOffset) {
  xyz.bomberman.room.data.RoomEvent.startRoomEvent(builder);
  xyz.bomberman.room.data.RoomEvent.addType(builder, type);
  xyz.bomberman.room.data.RoomEvent.addId(builder, idOffset);
  xyz.bomberman.room.data.RoomEvent.addPlayers(builder, playersOffset);
  return xyz.bomberman.room.data.RoomEvent.endRoomEvent(builder);
}

// Exports for Node.js and RequireJS
this.xyz = xyz;
