// automatically generated by the FlatBuffers compiler, do not modify

/**
 * @const
 * @namespace
 */
var xyz = xyz || {};

/**
 * @const
 * @namespace
 */
xyz.bomberman = xyz.bomberman || {};

/**
 * @const
 * @namespace
 */
xyz.bomberman.player = xyz.bomberman.player || {};

/**
 * @const
 * @namespace
 */
xyz.bomberman.player.data = xyz.bomberman.player.data || {};

/**
 * @enum {number}
 */
xyz.bomberman.player.data.EventType = {
  NONE: 0,
  Connected: 1,
  Disconnected: 2
};

/**
 * @enum {string}
 */
xyz.bomberman.player.data.EventTypeName = {
  '0': 'NONE',
  '1': 'Connected',
  '2': 'Disconnected'
};

/**
 * @constructor
 */
xyz.bomberman.player.data.Player = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {xyz.bomberman.player.data.Player}
 */
xyz.bomberman.player.data.Player.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {xyz.bomberman.player.data.Player=} obj
 * @returns {xyz.bomberman.player.data.Player}
 */
xyz.bomberman.player.data.Player.getRootAsPlayer = function(bb, obj) {
  return (obj || new xyz.bomberman.player.data.Player).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {xyz.bomberman.player.data.Player=} obj
 * @returns {xyz.bomberman.player.data.Player}
 */
xyz.bomberman.player.data.Player.getSizePrefixedRootAsPlayer = function(bb, obj) {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new xyz.bomberman.player.data.Player).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array|null}
 */
xyz.bomberman.player.data.Player.prototype.id = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array|null}
 */
xyz.bomberman.player.data.Player.prototype.name = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param {flatbuffers.Builder} builder
 */
xyz.bomberman.player.data.Player.startPlayer = function(builder) {
  builder.startObject(2);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} idOffset
 */
xyz.bomberman.player.data.Player.addId = function(builder, idOffset) {
  builder.addFieldOffset(0, idOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} nameOffset
 */
xyz.bomberman.player.data.Player.addName = function(builder, nameOffset) {
  builder.addFieldOffset(1, nameOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
xyz.bomberman.player.data.Player.endPlayer = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} idOffset
 * @param {flatbuffers.Offset} nameOffset
 * @returns {flatbuffers.Offset}
 */
xyz.bomberman.player.data.Player.createPlayer = function(builder, idOffset, nameOffset) {
  xyz.bomberman.player.data.Player.startPlayer(builder);
  xyz.bomberman.player.data.Player.addId(builder, idOffset);
  xyz.bomberman.player.data.Player.addName(builder, nameOffset);
  return xyz.bomberman.player.data.Player.endPlayer(builder);
}

/**
 * @constructor
 */
xyz.bomberman.player.data.PlayerId = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {xyz.bomberman.player.data.PlayerId}
 */
xyz.bomberman.player.data.PlayerId.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {xyz.bomberman.player.data.PlayerId=} obj
 * @returns {xyz.bomberman.player.data.PlayerId}
 */
xyz.bomberman.player.data.PlayerId.getRootAsPlayerId = function(bb, obj) {
  return (obj || new xyz.bomberman.player.data.PlayerId).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {xyz.bomberman.player.data.PlayerId=} obj
 * @returns {xyz.bomberman.player.data.PlayerId}
 */
xyz.bomberman.player.data.PlayerId.getSizePrefixedRootAsPlayerId = function(bb, obj) {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new xyz.bomberman.player.data.PlayerId).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array|null}
 */
xyz.bomberman.player.data.PlayerId.prototype.id = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param {flatbuffers.Builder} builder
 */
xyz.bomberman.player.data.PlayerId.startPlayerId = function(builder) {
  builder.startObject(1);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} idOffset
 */
xyz.bomberman.player.data.PlayerId.addId = function(builder, idOffset) {
  builder.addFieldOffset(0, idOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
xyz.bomberman.player.data.PlayerId.endPlayerId = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} idOffset
 * @returns {flatbuffers.Offset}
 */
xyz.bomberman.player.data.PlayerId.createPlayerId = function(builder, idOffset) {
  xyz.bomberman.player.data.PlayerId.startPlayerId(builder);
  xyz.bomberman.player.data.PlayerId.addId(builder, idOffset);
  return xyz.bomberman.player.data.PlayerId.endPlayerId(builder);
}

/**
 * @constructor
 */
xyz.bomberman.player.data.PlayerEvent = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {xyz.bomberman.player.data.PlayerEvent}
 */
xyz.bomberman.player.data.PlayerEvent.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {xyz.bomberman.player.data.PlayerEvent=} obj
 * @returns {xyz.bomberman.player.data.PlayerEvent}
 */
xyz.bomberman.player.data.PlayerEvent.getRootAsPlayerEvent = function(bb, obj) {
  return (obj || new xyz.bomberman.player.data.PlayerEvent).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {xyz.bomberman.player.data.PlayerEvent=} obj
 * @returns {xyz.bomberman.player.data.PlayerEvent}
 */
xyz.bomberman.player.data.PlayerEvent.getSizePrefixedRootAsPlayerEvent = function(bb, obj) {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new xyz.bomberman.player.data.PlayerEvent).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns {xyz.bomberman.player.data.EventType}
 */
xyz.bomberman.player.data.PlayerEvent.prototype.eventType = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? /** @type {xyz.bomberman.player.data.EventType} */ (this.bb.readUint8(this.bb_pos + offset)) : xyz.bomberman.player.data.EventType.NONE;
};

/**
 * @param {flatbuffers.Table} obj
 * @returns {?flatbuffers.Table}
 */
xyz.bomberman.player.data.PlayerEvent.prototype.event = function(obj) {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.__union(obj, this.bb_pos + offset) : null;
};

/**
 * @param {flatbuffers.Builder} builder
 */
xyz.bomberman.player.data.PlayerEvent.startPlayerEvent = function(builder) {
  builder.startObject(2);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {xyz.bomberman.player.data.EventType} eventType
 */
xyz.bomberman.player.data.PlayerEvent.addEventType = function(builder, eventType) {
  builder.addFieldInt8(0, eventType, xyz.bomberman.player.data.EventType.NONE);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} eventOffset
 */
xyz.bomberman.player.data.PlayerEvent.addEvent = function(builder, eventOffset) {
  builder.addFieldOffset(1, eventOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
xyz.bomberman.player.data.PlayerEvent.endPlayerEvent = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} offset
 */
xyz.bomberman.player.data.PlayerEvent.finishPlayerEventBuffer = function(builder, offset) {
  builder.finish(offset);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} offset
 */
xyz.bomberman.player.data.PlayerEvent.finishSizePrefixedPlayerEventBuffer = function(builder, offset) {
  builder.finish(offset, undefined, true);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {xyz.bomberman.player.data.EventType} eventType
 * @param {flatbuffers.Offset} eventOffset
 * @returns {flatbuffers.Offset}
 */
xyz.bomberman.player.data.PlayerEvent.createPlayerEvent = function(builder, eventType, eventOffset) {
  xyz.bomberman.player.data.PlayerEvent.startPlayerEvent(builder);
  xyz.bomberman.player.data.PlayerEvent.addEventType(builder, eventType);
  xyz.bomberman.player.data.PlayerEvent.addEvent(builder, eventOffset);
  return xyz.bomberman.player.data.PlayerEvent.endPlayerEvent(builder);
}

// Exports for ECMAScript6 Modules
export {xyz};
