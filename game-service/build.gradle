import io.netifi.flatbuffers.plugin.tasks.FlatBuffers

plugins {
    id "org.springframework.boot"
    id "io.spring.dependency-management"
    id "java"
    id "io.netifi.flatbuffers"
}

sourceCompatibility = JavaVersion.VERSION_11

configurations {
    flatbuf
}

dependencies {

    flatbuf(project(":game-service-idl"))
    flatbuf(project(":discovery-service-idl"))

    implementation(project(":game-ui"))

    implementation("org.springframework.boot:spring-boot-starter-webflux")
    implementation("org.springframework.boot:spring-boot-starter-rsocket")

    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    implementation("io.micrometer:micrometer-registry-prometheus:1.6.5")

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

test {
    useJUnitPlatform()
}

flatbuffers {
    flatBuffersVersion = '1.12.0'
}

processResources {
    dependsOn configurations.flatbuf
    configurations.flatbuf.files.each {
        from(zipTree(it).matching {
            include "*.fbs"
        })
    }
}

task createFlatBuffers(type: FlatBuffers, dependsOn: ['processResources']) {
    language = 'java'
    inputDir = file("$buildDir/resources/main")
    outputDir = file("$buildDir/generated/sources/flatbuffers/java/main")
    extraArgs = "--gen-mutable"
}

compileJava {
    dependsOn createFlatBuffers
}
